(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{147:function(e,t,o){"use strict";var n=o(148),s=o.n(n);function r(e){return e.url="http://localhost:8080"+e.url,e}function a(e){return Promise.reject(e)}var c=o(53);function l(e){const{data:t}=e;return-1===t.code?(c.Message.error(t.data.message),{}):(console.log("response:",e.data),e.data)}function i(e){return Promise.reject(e)}const u=s.a.create({timeout:2e4,maxContentLength:2e3,headers:{}});u.interceptors.request.use(r,a),u.interceptors.response.use(l,i);t.a=u},150:function(e,t,o){"use strict";o.d(t,"a",(function(){return s}));var n=o(147);const s=e=>Object(n.a)({url:"/get/roles",method:"get",params:e})},181:function(e,t,o){"use strict";o.r(t);var n=function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"home"},[this._v("\n  this is home page\n  ")])};n._withStripped=!0;var s=o(52),r=o(29),a=o(150);let c=class extends r.b{constructor(){super(...arguments),this.name="2343"}mounted(){console.log("页面加载完成"),this.getRoleInfo()}async getRoleInfo(){const e=await Object(a.a)();(async()=>"hello world")().then(e=>console.log(e)),console.log(12);const t=await fetch("http://localhost:8080/get/roles").then(e=>e.json());console.log("currRole:",e,t)}};c=Object(s.a)([r.a],c);var l=c,i=o(17),u=Object(i.a)(l,n,[],!1,null,null,null);u.options.__file="src/views/dashboard/index.vue";t.default=u.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,