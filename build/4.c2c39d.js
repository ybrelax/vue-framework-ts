(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{147:function(e,t,n){"use strict";var o=n(148),s=n.n(o);function r(e){return e.url="http://localhost:8080"+e.url,e}function c(e){return Promise.reject(e)}var a=n(53);function l(e){const{data:t}=e;return-1===t.code?(a.Message.error(t.data.message),{}):(console.log("response:",e.data),e.data)}function i(e){return Promise.reject(e)}const u=s.a.create({timeout:2e4,maxContentLength:2e3,headers:{}});u.interceptors.request.use(r,c),u.interceptors.response.use(l,i);t.a=u},150:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var o=n(147);const s=e=>Object(o.a)({url:"/get/roles",method:"get",params:e})},182:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"home"},[this._v("\n  设置中心\n")])};o._withStripped=!0;var s=n(52),r=n(29),c=n(150);let a=class extends r.b{constructor(){super(...arguments),this.name="2343"}mounted(){console.log("页面加载完成"),this.getRoleInfo()}async getRoleInfo(){const e=await Object(c.a)();(async()=>"hello world")().then(e=>console.log(e)),console.log(12);const t=await fetch("http://localhost:8080/get/roles").then(e=>e.json());console.log("currRole:",e,t)}};a=Object(s.a)([r.a],a);var l=a,i=n(17),u=Object(i.a)(l,o,[],!1,null,null,null);u.options.__file="src/views/setting/index.vue";t.default=u.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,